2002-11-17  Daniel Elstner  <daniel.elstner@gmx.net>

	* pixmaps/stock_save_all_16.png: New menu icon.
	* pixmaps/Makefile.am: Add new icon.
	* src/main.cc: Register new icon.

2002-11-17  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/controller.cc (ControlItem::add_widget): Honor group_enabled_.

2002-11-17  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/mainwindow.cc: Change default size of the window to 600x450
	because the new menu bar takes up quite some space.

2002-11-17  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/controller.cc (ControlItem::activate): Don't ignore the
	group_enabled_ flag.

2002-11-17  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/controller.{cc,h} (create_menubar): Implement.
	* src/mainwindow.cc: Show the menu bar, and make both toolbar and
	menu bar detachable.

2002-11-17  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/controller.{cc,h}: New files, implementing class Controller
	and class ControlItem.  ControlItem maintains an arbitrary number
	of activation sources, and controls the sensitivity state of an
	arbitrary number of widgets too.  Controller centralizes all of
	the ControlItems and provides create() functions for all pure
	control widgets in regexxer.  Also, there's ControlGroup which can
	be used to set the sensitivity of several widgets at once.

	All this stuff became necessary due to the proposed addition of
	menus.  Getting the sensitivity of all widgets right was already
	quite complex.  After the integration of menus the old code would
	have reached a critical mass.

	* src/imagebutton.{cc,h}: New files, containing ImageButton and
	ImageLabelButton that were previously in mainwindow.cc.  We need
	them in controller.cc now too.

	* src/Makefile.am (regexxer_SOURCES): Add new files.

	* src/mainwindow.{cc,h}: Integrate the new Controller concept and
	get rid of the obsolete cruft.  We're now below 1000 lines again.

2002-11-16  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/mainwindow.cc: Show tool tips for both find buttons too.

2002-11-16  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/mainwindow.cc: Use sentence case for all tool tips, as
	suggested by Ross Burton.

2002-11-15  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/sharedptr.cc: Remove already unused debug code.  The
	reference counting is rock solid thanks to SharedPtr<>.

2002-11-15  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/sharedptr.h (SharedObject): Remove the namespace prefix from
	the friend declaration.  This will hopefully fix a compilation
	problem with GCC 2.95.x -- once again.

2002-11-14  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/mainwindow.cc (on_busy_action_pulse): Simplify by reducing
	the amount of if-branches.

2002-11-13  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/sharedptr.h: Reimplement the static member templates
	cast_static<>(), cast_dynamic<>() and cast_dynamic_throw<>() as
	free functions, and use the boost naming convention.

	* src/filetree.cc: Use the new boost-like cast functions.

2002-11-11  Daniel Elstner  <daniel.elstner@gmx.net>

	* regexxer.desktop: New desktop file, provided by Ross Burton.
	Thanks Ross!
	* Makefile.am: Distribute and install regexxer.desktop.

2002-11-11  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filetree.{cc,h} (find_files): Use std::string instead
	of Glib::ustring for 'dirname' and get rid of the call to
	Glib::filename_from_utf8().  This doesn't really belong here.

	* src/mainwindow.cc (on_find_files): Convert the directory name
	to filename encoding, and use the current directory as fallback
	if it's empty.

2002-11-11  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/mainwindow.{cc,h} (button_find_matches_): Set this button
	insensitive unless there is at least one file to search in.
	Suggested by Murray Cumming <murrayc@usa.net>.
	(button_find_files_): Likewise set this button insensitive if
	entry_pattern_ is empty.

2002-11-11  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filetree.cc (on_buffer_modified_changed): Work around a nasty
	gtkmm bug:  Glib::SignalProxy seems to ignore the 'blocked' flag of
	the SigC::Connection object.  I'll fix this later in gtkmm itself.

2002-11-11  Daniel Elstner  <daniel.elstner@gmx.net>

	* macros/pcre.m4 (PCRE_CHECK_UTF8): Mention libpcre's --enable-utf8
	option in the error message.

2002-11-11  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filetree.{cc,h} (on_treestore_sort_column_changed): New signal
	handler, used to recalculate path_match_first_ and path_match_last_.
	This fixes a serious bug -- the code relies on the validity of this
	cached range.

regexxer 0.3:

2002-11-10  Daniel Elstner  <daniel.elstner@gmx.net>

	* configure.ac (AC_INIT): Bump version to 0.3.

2002-11-10  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/stringutils.cc (transform_pathname): Use byte-wise comparison
	because filenames should match exactly.  The Glib::ustring collation
	methods depend on the user's locale and might even ignore case.

2002-11-10  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/mainwindow.cc (on_preferences): Make this strongly exception
	safe, just to demonstrate how to use std::auto_ptr<> properly :)

2002-11-09  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/mainwindow.cc (on_preferences): If the preferences dialog
	is already open, call present() instead of raise().  The former
	does a much better job of putting the window where the user can
	see it.

2002-11-09  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filetree.{cc,h} (find_recursively): Call increment_file_count()
	from here instead of letting the caller do it.
	(find_check_file): Simplify by using Gtk::TreeModel::Row directly.

2002-11-09  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filetree.cc (collatekey_sort_func): Use std::strcmp() instead
	of std::string::compare(), because libstdc++-v2 (which comes with
	GCC 2.95.x) is badly broken and doesn't support this particular
	overload of compare().  Darn.

regexxer 0.2:

2002-11-08  Daniel Elstner  <daniel.elstner@gmx.net>

	* AUTHORS: Add myself ;)
	* NEWS: List major changes in 0.2.
	* README: Fix typos.

2002-11-08  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filetree.cc (load_file_with_fallback): Emit row_changed()
	whenever the value of fileinfo->load_failed changed, rather than
	only if the file seems to be binary.

2002-11-07  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/mainwindow.{cc,h}: If there are any unsaved files on quit
	or when reloading the file tree, pop up a dialog asking for
	confirmation.

2002-11-07  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filetree.{cc,h}: Get rid of the code that expanded/collapsed
	directory nodes on row clicks and the activated signal.  The GTK+
	people persuaded me that the inconsistency is worse than the little
	annoyance of having to hit the expander arrow.

2002-11-07  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filetree.{cc,h} (on_row_activated): Override, in order to
	expand/collapse a directory node when the spacebar was pressed.

2002-11-07  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filetree.{cc,h} (on_button_release_event): Override, in
	order to expand a directory node when the user clicked anywhere
	inside the row.  This might improve usability a bit.

2002-11-07  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filetree.cc: Make the column headers trigger sorting when
	clicked.  Again use a default sort function in order to get three
	modes of sorting.  That is, the default is ascending sort with
	directories first, but when clicking a column header no difference
	is made between files and directories.

2002-11-07  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filetree.{cc,h} (load_file_with_fallback): Ooops, I forgot
	that buffers are now freed whenever possible, thus we shouldn't
	just return even if fileinfo->load_failed has already been set.

2002-11-07  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filetree.{cc,h} (text_cell_data_func): Simplify.
	(load_file_with_fallback): Improve robustness of the code, and
	trigger row_changed() if load_failed has been set.  For some
	reason it worked without this explicit emission, but it's better
	not to rely on that.

2002-11-06  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filetree.{cc,h}: Show an icon indicating whether the item
	is a file or directory in front of the filename.  Check it out,
	this eye candy looks really nice.

2002-11-06  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/fileio.cc (save_file): Get rid of the #96373 work-around.

2002-11-06  Daniel Elstner  <daniel.elstner@gmx.net>

	* configure.ac (PKG_CHECK_MODULES): Require gtk+-2.0 >= 2.0.6 in
	order to match the web page.
	(AC_INIT): Bump version to 0.2.  Yay!

2002-11-06  Daniel Elstner  <daniel.elstner@gmx.net>

	* configure.ac (PKG_CHECK_MODULES): Require glib-2.0 >= 2.0.7.
	This is necessary due to GLib bug #91222 -- I don't want people
	thinking regexxer segfaulted randomly all the time because it
	were badly coded.

2002-11-06  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filetree.{cc,h} (collatekey_sort_func): Make this the sort
	function for mixed directory/file view.
	(collatekey_sort_func_dirs_first): Move the content of the former
	collatekey_sort_func() into here.
	(collatekey_sort_func_dirs_first_descending): Extra sort function
	which correctly reverses the meaning of the first byte in the key.
	This is for use with Gtk::SORT_DESCENDING.

2002-11-06  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filetree.{cc,h}: Speed up and simplify sorting by merging
	the directory/file information into the collate key (directories
	get a leading '0', files get a leading '1').  This is amazingly
	easy and not hackish in any way -- after all, this kind of pre-
	processing the strings is exactly what collate keys are for.

2002-11-05  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filebuffer.{cc,h} (is_freeable): New method that checks
	whether it's safe to unreference the buffer.  This can be used
	to reduce the memory footprint.

	* src/filetree.{cc,h}: Unreference the text buffer whenever
	possible.  For instance, we really don't need to keep a buffer
	in memory that has match_count == 0 and wasn't modified.  Also
	fix propagation of signal_match_count_changed().

2002-11-05  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filetree.cc (select_next_file): Re-add a missing
	"return true;" that got lost in a previous change.

2002-11-05  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/fileio.{cc,h} (FileInfo): Split this data structure into
	DirInfo and FileInfo, with a common base class FileInfoBase.
	This should be cleaner than having data members that can be
	invalid.

	* src/filetree.{cc,h}: Use the new DirInfo and FileInfo structs.
	Propagate changes of a buffer's modified change to all parent
	nodes, and color them red too.  Fix potential race conditions
	due to reassigment of blocked connections.

2002-11-05  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/sharedptr.h (SharedPtr<T>::cast_static): implement
	(cast_dynamic): implement
	(cast_dynamic_throw): implement.

2002-11-05  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filetree.{cc,h}: New files replacing filelist.{cc,h}.  The
	files are now displayed in a directory tree which is much cooler.
	As a side effect, it's now way faster when searching thousands of
	files.

	* src/Makefile.am: s/filelist/filetree/
	* configure.ac: Use src/pcreshell.cc as unique source file.

	* src/fileio.{cc,h} (FileInfo): Introduce a file_count member
	variable that became necessary to support subdirectories.

	* src/mainwindow.{cc,h}: Use the new FileTree widget.

2002-11-05  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/mainwindow.cc: In on_find_files() and on_exec_search(), make
	sure the corresponding button is sensitive before starting the busy
	action.  This is necessary since these callbacks are invoked from
	the entries' signal_activate() too.

2002-11-04  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/pcreshell.{cc,h}: Minor code cleanup.  Add a few assertions
	and a couple of comments.

regexxer 0.1:

2002-11-03  Daniel Elstner  <daniel.elstner@gmx.net>

	* pixmaps/Makefile.am: s/noinst_DATA/dist_noinst_DATA/ so that
	the pixmap files are included in the distribution.

2002-11-03  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/fileio.cc: Close and reopen the I/O channel when switching
	the encoding.  Changing encodings on the fly doesn't seem to work
	with older GLib releases.

2002-11-03  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/mainwindow.cc src/stringutils.cc: Be more tolerant about
	fucked up filenames.  Still show a (hopefully) annoying warning
	message, though.

2002-11-03  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/mainwindow.cc: Invoke file search respectively regex search
	on the entry widgets' signal_activate().

2002-11-03  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/stringutils.cc (apply_modifiers): Handle modifier sequences
	like "\u\L$2" correctly.  Since it's not an recursive function the
	code got pretty messy.  Needs to be refactored at some point.

2002-11-03  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/configdata.cc: Use g_warning() instead of g_message().  These
	errors don't occur on a normal setup and should really go to stderr.

2002-11-03  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/configdata.cc: Generalize the enum nick/value mapping code,
	and improve the error message strings.

2002-11-03  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/mainwindow.cc (on_hide): hide() the preferences dialog
	instead of deleting it, so that on_pref_dialog_hide() is executed
	to save the configuration data.

2002-11-03  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/configdata.{cc,h}: New files, implementing load/save of
	configuration data to a file.

	* src/Makefile.am: Add new files.
	* configure.ac: Check for umask() and its header files.

	* src/mainwindow.{cc,h}: Make use of the new code to load and
	save the configuration data.

	* src/stringutils.{cc,h} (trim_whitespace): New utility function.
	* src/prefdialog.cc (validate_encoding): Move to stringutils.{cc,h}.

2002-11-02  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/prefdialog.{cc,h}: Prevent double emission of
	signal_pref_toolbar_style_changed().

2002-10-31  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filelist.{cc,h} (find_files): Replace the pattern string
	argument with Pcre::Pattern& for consistency with find_matches().

	* src/mainwindow.cc (on_find_files): Construct the Pcre::Pattern
	for use with find_files().

2002-10-30  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filelist.{cc,h} (FileList::FindError): Store a list of
	strings instead of Glib::Error objects.  We don't need the extra
	information from Glib::Error, and plain strings gives us more
	flexibility with regards to message strings.

	* src/filelist.cc (save_current_file): Report errors to the caller
	using FileList::FileError exceptions.
	* src/filelist.cc (save_all_files): ditto.

	* src/mainwindow.{cc,h}: Generalize FindErrorDialog into
	FileErrorDialog and use it to report file saving errors too.

2002-10-29  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filelist.{cc,h} (FileList::FindError): Explicitly implement
	copy ctor and assignment operator.

	* src/filelist.cc (on_buffer_match_count_changed): Clutter the
	code with assertions, just to be sure.

2002-10-28  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/statusline.cc (CounterBox): Improve size calculation of the
	counter labels -- it no longer depends on '9' being the widest digit.

	* src/statusline.{cc,h} src/mainwindow.cc: Show the encoding of the
	currently displayed file in the statusbar.

2002-10-28  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filelist.{cc,h}: Collect file access errors during execution
	of find_files() and, when finished, return the list of errors via
	an exception to the caller.

	* src/mainwindow.cc (on_find_files): Show an error message dialog
	if the search pattern is invalid or if errors occurred during file
	search.

2002-10-28  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/mainwindow.cc (on_exec_search): I changed my mind, there is
	absolutely no need to show off Util::next() here :)

2002-10-28  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/stringutils.h: Introduce next() and prev() templates,
	shamelessly stolen from boost.

	* src/mainwindow.cc (on_exec_search): Use Util::next().

2002-10-28  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/mainwindow.cc (on_exec_search): If there was an error in
	the regex, move the Gtk::Entry cursor to the character reported
	by Pcre::Error::offset().

2002-10-27  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/stringutils.{cc,h} (int_to_string): New function.

	* src/mainwindow.cc (on_exec_search): Show an error dialog if
	there is an error in the regex.

2002-10-27  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/mainwindow.cc (on_select_folder): Hide the file selection
	pane in the Gtk::FileSelection dialog, since we only need the
	directory part.

2002-10-27  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/stringutils.{cc,h} src/prefdialog.cc: Get rid of
	ascii_toupper() and AsciiToupper because I just added the
	formerly missing Glib::Ascii::toupper() to glibmm :-P

2002-10-27  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/stringutils.h (AsciiToupper): New unary predicate that
	forwards to ascii_toupper().

	* src/prefdialog.cc (on_entry_fallback_activate): Use the
	AsciiToupper predicate so that the call can be inlined.

2002-10-27  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/stringutils.{cc,h} (ascii_toupper): Make this utility function
	publically available.

	* src/prefdialog.cc (on_entry_fallback_activate): Convert the
	encoding name to upper case.

2002-10-27  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/mainwindow.{cc,h}: Explicitely delete the preferences dialog
	on exit.  Although this isn't really necessary, it does look neater
	if we have a lot of cleanup to do on exit.

2002-10-27  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filebuffer.cc (find_matches): Correctly forward one character
	rather than one byte after matching the empty string twice.  Also,
	improve cancellation response by moving the signal_pulse() emission
	into the inner loop (shouldn't harm performance since we emit only
	once for 128 iterations anyway).

2002-10-26  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/fileio.{cc,h} src/filelist.{cc,h}: Make the fallback
	encoding configureable, so that it can be changed from the
	preferences dialog.

	* src/prefdialog.{cc,h} src/mainwindow.cc: Honor the preference
	setting of the fallback encoding.

2002-10-26  Daniel Elstner  <daniel.elstner@gmx.net>

	* pixmaps/stock_menu_about.png: New image stolen from Gnome2.
	* pixmaps/Makefile.am src/main.cc: Register the new stock image.

	* src/prefdialog.{cc,h}: New files, implemening the preferences
	dialog.  The about box is integrated as second notebook page,
	because I couldn't think of a better place to put it.

	* src/mainwindow.{cc,h}: Make the preferences tool button work.

2002-10-26  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/main.cc: Set a global window icon list.

	* src/mainwindow.cc: Consider both the movement buttons and the
	replace buttons as part of the "action area".  This fixes wrong
	sensitivity of the movement buttons during busy actions.

2002-10-26  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/statusline.{cc,h}: Install an accelerator key (Escape) for
	the cancel button.

2002-10-26  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filelist.{cc,h} src/mainwindow.{cc,h}: Major cleanup of the
	busy action cancelation code.  The new code is now centralized in
	class MainWindow, and has been merged with the progressbar pulse
	notification and busy GUI updating.

	* src/filebuffer.{cc,h}: Implement support for cancelation of busy
	actions such as find_matches(), using the new scheme described
	above.

	* src/statusline.{cc,h}: Add cancel button to the GUI.

2002-10-26  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filebuffer.cc (create_with_error_message): Improve message
	title: s/Load failed/Can't read file/

2002-10-26  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filelist.cc src/mainwindow.cc: Make use of the progress bar
	pulse feature while globally replacing matches, too.

2002-10-26  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filebuffer.cc (create_with_error_message): Don't forget
	set_modified(false) after filling the buffer.

2002-10-26  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/statusline.cc: Correctly handle signal_style_changed()
	from the labels rather than the container.

	* src/filebuffer.{cc,h} src/fileio.{cc,h} src/filelist.{cc,h}:
	Instead of printing error messages to the console, write the
	message to a text buffer.  Use a dialog error stock image so
	that it looks good.

	* src/filebuffer.{cc,h} src/filelist.{cc,h} src/mainwindow.{cc,h}:
	In the match counter, display the number of matches per file rather
	than the overall match count.  Also, remember this original match
	count and don't decrease it when removing matches.  Make the match
	index counter work.

2002-10-25  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/statusline.{cc,h} (CounterBox): New class encapsulating a
	single "index/count"-style counter, for use by class StatusLine.
	Further improve calculation of the label lengths.

	* src/filelist.{cc,h} src/mainwindow.{cc,h}: Add a file_index
	parameter to FileList::signal_switch_buffer() and display it in
	the status line.

2002-10-25  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filebuffer.{cc,h}: Implement support for matching empty
	strings, while emulating the behaviour of Perl's /g modifier.

2002-10-24  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/statusline.{cc,h}: New files, implementing the status box
	at the bottom of the main window.

	* src/mainwindow.{cc,h} src/filelist.{cc,h}: Implement file and
	match counter using the new StatusLine object.

	* src/filelist.{cc,h}: Speed up sorting by defining a custom sort
	function that makes use of collate keys.

2002-10-24  Daniel Elstner  <daniel.elstner@gmx.net>

	* macros/cxx.m4: New file, implementing custom autoconf macros
	related to checking the C++ compiler/environment.
	(REGEXXER_CXX_HAS_STD_LOCALE): New m4 macro.
	(REGEXXER_ARG_ENABLE_WARNINGS): New m4 macro.

	* configure.ac: Make use of the new autoconf macros.
	* Makefile.am (EXTRA_DIST): Add macros/cxx.m4.

2002-10-21  Daniel Elstner  <daniel.elstner@gmx.net>

	* configure.ac: Require gtkmm-2.0 >= 2.0.0.

2002-10-21  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/fileio.cc: Dump std::[io]fstream in favor of Glib::IOChannel.
	It's less code now and the error reporting should be better too.

2002-10-21  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/fileio.{cc,h}: New files.
	* src/filelist.{cc,h}: Separate the load/save functionality into
	fileio.{cc,h} to improve modularity of the code.

2002-10-21  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filelist.{cc,h} (FileList::find_recursively): Move the
	file_test() code into a separate method find_check_file(), and
	improve the error handling.

2002-10-21  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filelist.{cc,h}: Cache the Gdk::Color object used for
	files which failed to load.

	* src/mainwindow.cc: Replace some unnecessary run-time checked
	casts with static ones.

2002-10-20  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/mainwindow.cc (MainWindow::on_filelist_bound_state_changed):
	Don't forget to update the prev/next match buttons' sensitivity.

2002-10-20  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filelist.cc (FileList::find_files): Catch exceptions from
	Glib::Dir and Glib::file_test().

2002-10-20  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/stringutils.{cc,h} (Util::convert_to_ascii): New function
	which replaces all non-ASCII characters with '?'.  This should be
	used for error messages when everything else failed.

	* src/filelist.cc: Use filename_to_utf8_fallback() in a few more
	places.  Also, if the filename conversion fails ultimately show a
	warning and skip the file.

2002-10-20  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/stringutils.{cc,h} (Util::filename_to_utf8_fallback): New
	wrapper function for Glib::filename_to_utf8() that works even if
	the user hasn't set G_BROKEN_FILENAMES correctly.  In that case
	it shows a hopefully annoying g_warning().

	* src/filelist.cc: Use Util::filename_to_utf8_fallback() where
	appropriate.
	* src/mainwindow.cc: ditto.

2002-10-20  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filelist.cc: Speed up find_files() by updating the GUI
	every 16 iterations rather than all the time.

2002-10-20  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/mainwindow.{cc,h} src/filelist.{cc,h}: Implement "Save" and
	"Save all" functionality.  Also, separate the file list boundary
	notification from signal_switch_buffer() -- should be a lot more
	robust now.

2002-10-20  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/mainwindow.{cc,h} src/filelist.{cc,h}: Add "Save all" tool
	button and implement sensitivity setting for "Save" and "Save all".

2002-10-19  Daniel Elstner  <daniel.elstner@gmx.net>

	* pixmaps/stock_save_all_24.png: New file.
	* pixmaps/Makefile.am: Use gdk-pixbuf-csource to generate inline
	stock pixbufs.
	* configure.ac: Check for gdk-pixbuf-csource.
	* src/main.cc: Register new stock items for regexxer.

2002-10-18  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filelist.{cc,h}: Paint rows of modified files in red.

2002-10-18  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/mainwindow.cc: Make the TextView non-editable if no file
	is loaded.

2002-10-18  Daniel Elstner  <daniel.elstner@gmx.net>

	* configure.ac: Require sigc++ >= 1.2.1 and gtkmm >= 1.3.27.

2002-10-16  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filebuffer.{cc,h} src/filelist.{cc,h} src/mainwindow.{cc,h}:
	Implement match substitution for the current file and all files,
	and get notification on match count changes working correctly.

2002-10-16  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/Makefile.am (DEFS): Define all the *_DISABLE_DEPRECATED
	macros just to prove regexxer is legacy-free ;)

2002-10-16  Daniel Elstner  <daniel.elstner@gmx.net>

	* src/filebuffer.h (BoundState): Define operator|=() and friends.
	* src/filebuffer.cc: Use the new operator.

2002-10-16  Daniel Elstner  <daniel.elstner@gmx.net>

	Woohoo, first ChangeLog entry for regexxer!

	* virtually all files: Insert copyright notice and CVS Id tags.

